import type { Importer } from '../../../shared/interfaces/Importer';
import type { %%KEY%% } from '../../../shared/types/keys';
import type { %%COLLECTION%% } from '../../../shared/types/collections';
import { %%TYPES%% } from '../../map/wiki/%%TYPES%%';
import { %%REPOSITORY%% } from './%%REPOSITORY%%';

export class %%CLASSNAME%% implements Importer<%%KEY%%, %%COLLECTION%%>
{
  /**
  * Repository to access data storage.
  */
  public repository = new %%REPOSITORY%%;
  
  /**
  * Import to JSON files.
  */
  async json() {            
    this.repository.clearCollection();
    
    for (const key of Object.keys(%%TYPES%%)) {
      await this.repository.storeToJsonFile(<%%KEY%%>key);
    }
    
    return this.repository.collection;
  }
  
  /**
  * Import to MongoDB
  */
  async mongo() {
    this.repository.clearCollection();
    
    for (const key of Object.keys(%%TYPES%%)) {
      for (const obj of %%TYPES%%[<%%KEY%%>key]) {
        await this.repository.storeJsonFileToMongoDb(key, obj);
      }
    }
    
    return this.repository.collection;
  }
}